---
import PostDescription from './PostDescription.astro';
import PostContent from './PostContent.astro';
import Navigation  from './SideSection/Navigation.tsx';
import Question from './SideSection/Question.astro';
import PostFooter from './PostFooter.tsx';


interface DescriptionData {
  image: {
    url: string;
    copyright: string;
  };
  title: string;
  author: string;
  tags: string[];
  date: string;
}

interface ContentData {
  id: string;
  titleType: boolean;
  title: string;
  text: string;
  image: {
    url: string;
    copyright: string;
  };
}

interface PostData {
  description: DescriptionData;
  content: ContentData[];
}

interface Props {
  data: PostData;
}

const QuestionMock = {
  title: "Not finding what you're looking for?",
  description: "Don't be shy and let us know about your challenge.",
  buttonText: 'Ask a queston',
}

const { data } = Astro.props

const descriptionData = data.description;
const contentData = data.content;

const NavHeaders = contentData.map((content) => ({
  id: content.id,
  title: content.title,
}));
---

<!-- Layout component -->
<div>
  <PostDescription {...descriptionData} />
  <div class="flex flex-col lg:flex-row gap-20 w-full">
    <div class="hidden lg:flex flex-col gap-6 sticky top-28 h-fit">
      <Navigation headers={NavHeaders} client:load/>
      <Question {...QuestionMock} />
    </div>
    <div class="flex flex-col gap-10">
      {contentData.map((content) => (
        <PostContent {...content} />
      ))}
      <hr class='w-full' />
      <PostFooter likes={666} client:load/>
    </div>
    <div class="lg:hidden">
      <Question {...QuestionMock} />
    </div>
  </div>
</div>